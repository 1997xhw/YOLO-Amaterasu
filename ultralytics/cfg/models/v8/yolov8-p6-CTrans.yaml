# Ultralytics YOLO ðŸš€, AGPL-3.0 license
# YOLOv8 object detection model with P3-P6 outputs. For Usage examples see https://docs.ultralytics.com/tasks/detect

# Parameters
nc: 80  # number of classes
scales: # model compound scaling constants, i.e. 'model=yolov8n-p6.yaml' will call yolov8-p6.yaml with scale 'n'
  # [depth, width, max_channels]
  n: [0.33, 0.25, 1024]
  s: [0.33, 0.50, 1024]
  m: [0.67, 0.75, 768]
  l: [1.00, 1.00, 512]
  x: [1.00, 1.25, 512]

# YOLOv8.0x6 backbone
backbone:
  # [from, repeats, module, args]
  - [-1, 1, Conv, [64, 3, 2]]  # 0-P1/2
  - [-1, 1, Conv, [128, 3, 2]]  # 1-P2/4
  - [-1, 3, C2f, [128, True]]
  - [-1, 1, Conv, [256, 3, 2]]  # 3-P3/8
  - [-1, 6, C2f, [256, True]]
  - [-1, 1, Conv, [512, 3, 2]]  # 5-P4/16
  - [-1, 6, C2f, [512, True]]
  - [-1, 1, Conv, [768, 3, 2]]  # 7-P5/32
  - [-1, 3, C2f, [768, True]]
  - [-1, 1, Conv, [1024, 3, 2]]  # 9-P6/64
  - [-1, 3, C2f, [1024, True]]
  - [-1, 1, SPPF, [1024, 5]]  # 11

# YOLOv8.0x6 head
head:
  - [[4, 6, 8, 11], 1, ChannelTransformer, []] # 12
  - [12, 1, GetIndexOutput, [0]] # 13-P3/8
  - [12, 1, GetIndexOutput, [1]] # 14-P4/16
  - [12, 1, GetIndexOutput, [2]] # 15-P5/32
  - [12, 1, GetIndexOutput, [3]] # 16-P6/64

  - [-1, 1, nn.Upsample, [None, 2, 'nearest']]
  - [[-1, 15], 1, Concat, [1]]  # cat backbone P5
  - [-1, 3, C2, [768, False]]  # 19

  - [-1, 1, nn.Upsample, [None, 2, 'nearest']]
  - [[-1, 14], 1, Concat, [1]]  # cat backbone P4
  - [-1, 3, C2, [512, False]]  # 22

  - [-1, 1, nn.Upsample, [None, 2, 'nearest']]
  - [[-1, 13], 1, Concat, [1]]  # cat backbone P3
  - [-1, 3, C2, [256, False]]  # 25 (P3/8-small)

  - [-1, 1, Conv, [256, 3, 2]]
  - [[-1, 22], 1, Concat, [1]]  # cat head P4
  - [-1, 3, C2, [512, False]]  # 28 (P4/16-medium)

  - [-1, 1, Conv, [512, 3, 2]]
  - [[-1, 19], 1, Concat, [1]]  # cat head P5
  - [-1, 3, C2, [768, False]]  # 31 (P5/32-large)

  - [-1, 1, Conv, [768, 3, 2]]
  - [[-1, 16], 1, Concat, [1]]  # cat head P6
  - [-1, 3, C2, [1024, False]]  # 34 (P6/64-xlarge)

  - [[25, 28, 31, 34], 1, Detect, [nc]]  # Detect(P3, P4, P5, P6)
